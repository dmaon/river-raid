var e=Object.defineProperty,t=(t,i,s)=>((t,i,s)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s)(t,"symbol"!=typeof i?i+"":i,s);import{p as i}from"./phaser-DM0uoNMb.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const i of e)if("childList"===i.type)for(const e of i.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class s extends i.Scene{constructor(){super("Game"),t(this,"camera"),t(this,"planeCamera"),t(this,"control"),t(this,"gameWidth"),t(this,"gameHeight"),t(this,"plane"),t(this,"bullet"),t(this,"cursors"),t(this,"walls"),t(this,"battleships"),t(this,"helicopters"),t(this,"enemies"),t(this,"bulletInMotion"),t(this,"bulletSpeed"),t(this,"bulletFireTween"),t(this,"lifeChance"),t(this,"maxFirstEnemiesNumber"),t(this,"enemyTypes"),t(this,"debugMode"),t(this,"enemiesTweens"),t(this,"maxWalls"),t(this,"maxThr"),t(this,"counter"),t(this,"keyHoldDuration"),t(this,"moveSpeed"),t(this,"maxSpeed"),t(this,"planeEngineFx"),t(this,"explosionFx"),t(this,"props"),t(this,"propGameObject"),t(this,"finishLine"),t(this,"startMode")}preload(){this.counter=0,this.maxWalls=30,this.lifeChance=3,this.maxFirstEnemiesNumber=2,this.startMode=!1,this.bulletInMotion=!1,this.bulletSpeed=400,this.enemyTypes=["battleship","helicopter"],this.debugMode=!1,this.enemiesTweens=[],this.enemies=[],this.keyHoldDuration=0,this.moveSpeed=5,this.maxSpeed=15,this.load.setPath("assets"),this.load.spritesheet("plane","plane.png",{frameWidth:64,frameHeight:59}),this.camera=this.cameras.main,this.gameWidth=this.camera.width,this.gameHeight=this.camera.height,this.load.image("walls","walls.png"),this.load.image("prop","prop.png"),this.load.image("bridge","bridge.png"),this.load.image("bullet","bullet.png"),this.load.spritesheet("helicopter","helicopter.png",{frameWidth:64,frameHeight:40}),this.load.spritesheet("battleship","ship.png",{frameWidth:128,frameHeight:32}),this.load.audio("explosion",["sounds/explosion-8bit.wav"]),this.load.audio("bullet",["sounds/bullet-8bit.wav"]),this.load.audio("planeEngine",["sounds/engine-8bit.wav"]),this.load.audio("planeEngineFast",["sounds/engine-fast-8bit.wav"]),this.load.audio("planeEngineSlow",["sounds/engine-slow-8bit.wav"]),this.load.bitmapFont("atari","fonts/bitmap/atari-classic.png","fonts/bitmap/atari-classic.xml")}create(){this.planeEngineFx=this.sound.add("planeEngine"),this.explosionFx=this.sound.add("explosion"),this.cursors=this.input.keyboard.createCursorKeys(),this.createAnimation(),this.makeWall(),this.addPlane(),this.addEnemy(),this.input.keyboard.on("keydown-SPACE",(()=>{this.startMode=!0}))}makeFinishLine(e){this.finishLine=this.physics.add.group(),this.finishLine.create(0,this.gameHeight-256*--e-128,"bridge").setOrigin(0)}makeProps(e,t,i,s,a){const h=this.add.container(),n=new Phaser.Geom.Rectangle(e,t,i-128,s-99);return 1===a&&e>=80&&i>128&&(this.propGameObject=this.physics.add.sprite(0,0,"prop").setOrigin(a),h.add(Phaser.Actions.RandomRectangle([this.propGameObject],n))),0===a&&e<this.gameWidth-80&&i>128&&(this.propGameObject=this.physics.add.sprite(0,0,"prop").setOrigin(a),h.add(Phaser.Actions.RandomRectangle([this.propGameObject],n))),h}makeWall(){this.maxThr=0,this.walls=this.physics.add.group(),this.props=this.add.group();let e=0;for(;e<this.maxWalls;e++){let t=Phaser.Math.Between(-100,100);this.walls.create(t,this.gameHeight-256*e,"walls"),this.props.add(this.makeProps(t,this.gameHeight-256*e,256,256,1)),t=Phaser.Math.Between(-100,128),this.walls.create(this.gameWidth-t,this.gameHeight-256*e,"walls"),this.props.add(this.makeProps(this.gameWidth-t,this.gameHeight-256*e,256,256,0))}this.maxThr=256*this.maxWalls+120,this.makeFinishLine(e)}createAnimation(){this.anims.create({key:"plane-move-forward",frames:[{key:"plane",frame:0}],frameRate:10,repeat:-1}),this.anims.create({key:"plane-move-right",frames:[{key:"plane",frame:1}],frameRate:10,repeat:-1}),this.anims.create({key:"plane-move-left",frames:[{key:"plane",frame:2}],frameRate:10,repeat:-1}),this.anims.create({key:"plane-explode",frames:[{key:"plane",frame:3}],frameRate:10,repeat:0}),this.anims.create({key:"helicopter-fly",frames:this.anims.generateFrameNumbers("helicopter",{start:0,end:1}),frameRate:10,repeat:-1}),this.anims.create({key:"helicopter-explode",frames:this.anims.generateFrameNumbers("helicopter",{start:2,end:3}),frameRate:10,repeat:0}),this.anims.create({key:"battleship-explode",frames:this.anims.generateFrameNumbers("battleship",{start:1,end:2}),frameRate:5,repeat:0})}addPlane(){this.plane=this.physics.add.sprite(this.gameWidth/2,this.gameHeight-59,"plane"),this.plane.setCollideWorldBounds(!0),this.physics.add.collider(this.plane,this.walls,this.planeCrash.bind(this)),this.reloadPlaneBullet()}reloadPlaneBullet(){this.bullet=this.physics.add.sprite(this.plane.x,this.plane.y,"bullet"),this.bullet.setCollideWorldBounds(!0)}fireBullet(){this.bulletInMotion||(this.bulletInMotion=!0,this.bullet.y>0&&(this.sound.add("bullet").play(),this.bulletFireTween=this.tweens.add({targets:this.bullet,y:-1*this.bullet.height,duration:this.bulletSpeed,ease:"Linear",repeat:0,onComplete:()=>{this.bulletInMotion=!1,this.bullet.x=this.plane.x,this.bullet.y=this.plane.y}})))}addEnemies(){const e=[{key:"left",x:256},{key:"right",x:this.gameWidth-256}];let t,i,s;for(let a=0;a<this.maxFirstEnemiesNumber;a++){t=Phaser.Math.Between(0,this.gameHeight-200),i=Phaser.Math.RND.pick(this.enemyTypes),s=Phaser.Math.RND.pick(e);let h=this.physics.add.sprite(s.x,t,i);h.setFlipX("right"==s.key),h.setCollideWorldBounds(!0),h.enemyIdentifier=`${i}${a}`,this.physics.add.collider(this.plane,h,this.collidePlaneWithEnemy.bind(this)),this.physics.add.collider(this.bullet,h,this.hitEnemy.bind(this)),this.enemies.push(h)}Phaser.Actions.PlayAnimation(this.enemies.filter((e=>"helicopter"==e.texture.key)),"helicopter-fly")}addEnemy(){const e=[{key:"left",x:256},{key:"right",x:this.gameWidth-256}];let t,i,s;t=Phaser.Math.Between(0,this.gameHeight/4),i=Phaser.Math.RND.pick(this.enemyTypes),s=Phaser.Math.RND.pick(e);let a=this.physics.add.sprite(s.x,t,i);a.setFlipX("right"==s.key),a.setCollideWorldBounds(!0),a.enemyIdentifier=`${i}${this.enemies.length+1}`,this.physics.add.collider(this.plane,a,this.collidePlaneWithEnemy.bind(this)),this.physics.add.collider(this.bullet,a,this.hitEnemy.bind(this)),this.enemies.push(a),Phaser.Actions.PlayAnimation(this.enemies.filter((e=>"helicopter"==e.texture.key)),"helicopter-fly"),this.enemiesTweens.push({enemyIdentifier:a.enemyIdentifier,tween:this.tweens.add({targets:a,x:{from:a.x,to:256==a.x?this.gameWidth-256:256},flipX:!0,yoyo:!0,duration:Phaser.Math.Between(900,2e3),ease:"Linear",delay:1==this.debugMode?1e3*(this.enemies.length+1):Phaser.Math.Between(0,1e3),repeat:-1})})}makeEnemiesTween(){this.enemies.forEach(((e,t)=>{this.enemiesTweens.push({enemyIdentifier:e.enemyIdentifier,tween:this.tweens.add({targets:e,x:{from:e.x,to:256==e.x?this.gameWidth-256:256},flipX:!0,yoyo:!0,duration:Phaser.Math.Between(900,2e3),ease:"Linear",delay:1==this.debugMode?1e3*(t+1):Phaser.Math.Between(0,1e3),repeat:-1})})}))}resetPlanePosition(){this.lifeChance>0&&(this.scene.pause(),this.plane&&this.plane.anims&&this.plane.anims.play("plane-move-forward"),this.plane.x=this.gameWidth/2,this.plane.y=this.gameHeight-59,setTimeout((()=>{this.scene.resume()}),500))}takePlayerLife(){this.lifeChance--,this.lifeChance<=0&&this.scene.start("GameOver")}planeCrash(e){var t;"plane-explode"!==(null==(t=e.anims.currentAnim)?void 0:t.key)&&(e.anims.play("plane-explode",!0),this.explosionFx.play(),e.on("animationcomplete",(()=>{var t;"plane-explode"===(null==(t=e.anims.currentAnim)?void 0:t.key)&&(this.resetPlanePosition(),this.takePlayerLife())})))}hitEnemy(e,t){void 0!==this.bulletFireTween&&this.bulletFireTween.complete(10);const i=this.enemiesTweens.find((e=>e.enemyIdentifier===t.enemyIdentifier));i&&i.tween.stop(),this.explosionFx.play(),"helicopter"==t.texture.key?t.anims.play("helicopter-explode"):"battleship"==t.texture.key&&t.anims.play("battleship-explode"),t.body&&(t.body.enable=!1),t.on("animationcomplete",(()=>{t.destroy()}))}collidePlaneWithEnemy(e,t){var i,s,a;const h=this.enemiesTweens.find((e=>e.enemyIdentifier===t.enemyIdentifier));h&&h.tween.stop(),"battleship-explode"!=(null==(i=t.anims.currentAnim)?void 0:i.key)&&"helicopter-explode"!=(null==(s=t.anims.currentAnim)?void 0:s.key)&&("helicopter"==t.texture.key?t.anims.play("helicopter-explode"):"battleship"==t.texture.key&&t.anims.play("battleship-explode"),t.on("animationcomplete",(()=>{t.destroy()})),"plane-explode"!==(null==(a=e.anims.currentAnim)?void 0:a.key)&&(e.anims.play("plane-explode",!0),this.explosionFx.play(),e.on("animationcomplete",(()=>{var t;"plane-explode"===(null==(t=e.anims.currentAnim)?void 0:t.key)&&(this.takePlayerLife(),this.resetPlanePosition())}))))}update(){var e;if(!this.startMode||this.lifeChance<=0)return;const t="plane-explode"===(null==(e=this.plane.anims.currentAnim)?void 0:e.key);this.plane.setVelocityX(0),this.plane.setVelocityY(0),t||this.plane.anims.play("plane-move-forward"),this.cursors.left.isDown&&(this.plane.setVelocityX(-300),t||this.plane.anims.play("plane-move-left",!0)),this.cursors.right.isDown&&(this.plane.setVelocityX(300),t||this.plane.anims.play("plane-move-right",!0));{this.counter++,this.cursors.up.isDown||this.cursors.up.isDown&&(this.cursors.left.isDown||this.cursors.right.isDown)?(this.keyHoldDuration+=10,this.planeEngineFx.setRate(1.5)):this.cursors.up.isDown||this.cursors.left.isDown||this.cursors.right.isDown||(this.keyHoldDuration=0,this.planeEngineFx.setRate(1));let e=Phaser.Math.Clamp(this.moveSpeed+this.keyHoldDuration/100,this.moveSpeed,this.maxSpeed);this.cursors.down.isDown&&(e=3,this.planeEngineFx.setRate(.5)),this.planeEngineFx.isPlaying||this.planeEngineFx.play(),this.enemies.forEach((t=>{t.y+=e,t.y>=this.gameHeight-29&&t.destroy()})),this.walls.incY(e),this.finishLine.incY(e),this.props.incY(e),this.walls.getChildren()[0].y>this.maxThr+this.gameHeight/2&&this.scene.start("PlayerWins"),this.counter%Phaser.Math.Between(70,100)==0&&this.addEnemy()}this.cursors.space.isDown&&this.fireBullet(),this.bullet.x=this.plane.x}}class a extends i.Scene{constructor(){super("PreLoad"),t(this,"gameWidth"),t(this,"gameHeight")}preload(){this.gameWidth=this.cameras.main.width,this.gameHeight=this.cameras.main.height,this.load.setPath("assets"),this.load.bitmapFont("atari","fonts/bitmap/atari-classic.png","fonts/bitmap/atari-classic.xml"),this.load.audio("gameStart",["sounds/game start.wav"])}create(){this.add.bitmapText(this.gameWidth/2,this.gameHeight/2,"atari","Press space to start",40).setOrigin(.5).setTint(16776960),this.sound.stopAll(),this.sound.add("gameStart").play(),this.input.keyboard.on("keydown-SPACE",(()=>{this.scene.start("Game")}))}}class h extends i.Scene{constructor(){super("PlayerWins"),t(this,"gameWidth"),t(this,"gameHeight")}preload(){this.gameWidth=this.cameras.main.width,this.gameHeight=this.cameras.main.height,this.load.setPath("assets"),this.load.bitmapFont("atari","fonts/bitmap/atari-classic.png","fonts/bitmap/atari-classic.xml"),this.load.audio("playerWins",["sounds/winner.wav"])}create(){this.add.bitmapText(this.gameWidth/2,this.gameHeight/2,"atari","You Win",40).setOrigin(.5).setTint(16776960),this.sound.stopAll(),this.sound.add("playerWins").play(),this.input.keyboard.on("keydown-SPACE",(()=>{this.scene.start("PreLoad")}))}}class n extends i.Scene{constructor(){super("GameOver"),t(this,"gameWidth"),t(this,"gameHeight")}preload(){this.gameWidth=this.cameras.main.width,this.gameHeight=this.cameras.main.height,this.load.setPath("assets"),this.load.bitmapFont("atari","fonts/bitmap/atari-classic.png","fonts/bitmap/atari-classic.xml"),this.load.audio("gameOver",["sounds/game over.mp3"])}create(){this.add.bitmapText(this.gameWidth/2,this.gameHeight/2,"atari","Game Over",40).setOrigin(.5).setTint(16776960),this.sound.stopAll(),this.sound.add("gameOver").play(),this.input.keyboard.on("keydown-SPACE",(()=>{this.scene.start("PreLoad")}))}}const l={type:i.AUTO,width:1024,height:768,parent:"game-container",backgroundColor:"#2d32b8",scale:{mode:i.Scale.FIT,autoCenter:i.Scale.CENTER_BOTH},scene:[a,s,h,n],physics:{default:"arcade",arcade:{}}};new i.Game(l);
